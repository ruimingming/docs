(window.webpackJsonp=window.webpackJsonp||[]).push([[49],{436:function(a,t,e){"use strict";e.r(t);var r=e(5),s=Object(r.a)({},(function(){var a=this,t=a.$createElement,e=a._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h1",{attrs:{id:"nodejs中的内置对象"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nodejs中的内置对象"}},[a._v("#")]),a._v(" NodeJS中的内置对象")]),a._v(" "),e("h2",{attrs:{id:"全局对象"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#全局对象"}},[a._v("#")]),a._v(" 全局对象")]),a._v(" "),e("p",[a._v("Node提供以下几个全局对象，它们是所有模块都可以调用的。")]),a._v(" "),e("h3",{attrs:{id:"global"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#global"}},[a._v("#")]),a._v(" global")]),a._v(" "),e("p",[a._v("表示Node所在的全局环境，类似于浏览器的window对象。需要注意的是，如果在浏览器中声明一个全局变量，实际上是声明了一个全局对象的属性，比如"),e("code",[a._v("var x = 1")]),a._v("等同于设置"),e("code",[a._v("window.x = 1")]),a._v("，但是Node不是这样，至少在模块中不是这样（REPL环境的行为与浏览器一致）。在模块文件中，声明"),e("code",[a._v("var x = 1")]),a._v("，该变量不是"),e("code",[a._v("global")]),a._v("对象的属性，"),e("code",[a._v("global.x")]),a._v("等于undefined。这是因为模块的全局变量都是该模块私有的，其他模块无法取到。")]),a._v(" "),e("h3",{attrs:{id:"process"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#process"}},[a._v("#")]),a._v(" process")]),a._v(" "),e("p",[a._v("该对象表示Node所处的当前进程，允许开发者与该进程互动。")]),a._v(" "),e("h3",{attrs:{id:"console"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#console"}},[a._v("#")]),a._v(" console")]),a._v(" "),e("p",[a._v("指向Node内置的console模块，提供命令行环境中的标准输入、标准输出功能。")]),a._v(" "),e("h2",{attrs:{id:"全局函数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#全局函数"}},[a._v("#")]),a._v(" 全局函数")]),a._v(" "),e("p",[a._v("Node还提供一些全局函数。")]),a._v(" "),e("h3",{attrs:{id:"settimeout"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#settimeout"}},[a._v("#")]),a._v(" setTimeout()")]),a._v(" "),e("p",[a._v("用于在指定毫秒之后，运行回调函数。实际的调用间隔，还取决于系统因素。间隔的毫秒数在1毫秒到2,147,483,647毫秒（约24.8天）之间。如果超过这个范围，会被自动改为1毫秒。该方法返回一个整数，代表这个新建定时器的编号。")]),a._v(" "),e("h3",{attrs:{id:"cleartimeout"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cleartimeout"}},[a._v("#")]),a._v(" clearTimeout()")]),a._v(" "),e("p",[a._v("用于终止一个setTimeout方法新建的定时器。")]),a._v(" "),e("h3",{attrs:{id:"setinterval"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#setinterval"}},[a._v("#")]),a._v(" setInterval()")]),a._v(" "),e("p",[a._v("用于每隔一定毫秒调用回调函数。由于系统因素，可能无法保证每次调用之间正好间隔指定的毫秒数，但只会多于这个间隔，而不会少于它。指定的毫秒数必须是1到2,147,483,647（大约24.8天）之间的整数，如果超过这个范围，会被自动改为1毫秒。该方法返回一个整数，代表这个新建定时器的编号。")]),a._v(" "),e("h3",{attrs:{id:"clearinterval"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#clearinterval"}},[a._v("#")]),a._v(" clearInterval()")]),a._v(" "),e("p",[a._v("终止一个用setInterval方法新建的定时器。")]),a._v(" "),e("h3",{attrs:{id:"require"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#require"}},[a._v("#")]),a._v(" require()")]),a._v(" "),e("p",[a._v("用于加载模块。")]),a._v(" "),e("h3",{attrs:{id:"buffer"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#buffer"}},[a._v("#")]),a._v(" Buffer()")]),a._v(" "),e("p",[a._v("用于操作二进制数据。")]),a._v(" "),e("h2",{attrs:{id:"全局变量"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#全局变量"}},[a._v("#")]),a._v(" 全局变量")]),a._v(" "),e("p",[a._v("Node提供两个全局变量，都以两个下划线开头。")]),a._v(" "),e("h3",{attrs:{id:"filename"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filename"}},[a._v("#")]),a._v(" __filename")]),a._v(" "),e("p",[e("strong",[a._v("指向当前运行的脚本文件名。")])]),a._v(" "),e("h3",{attrs:{id:"dirname"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#dirname"}},[a._v("#")]),a._v(" __dirname")]),a._v(" "),e("p",[a._v("指向当前运行的脚本所在的目录。")]),a._v(" "),e("p",[a._v("除此之外，还有一些对象实际上是模块内部的局部变量，指向的对象根据模块不同而不同，但是所有模块都适用，可以看作是伪全局变量，主要为module, module.exports, exports等。")])])}),[],!1,null,null,null);t.default=s.exports}}]);